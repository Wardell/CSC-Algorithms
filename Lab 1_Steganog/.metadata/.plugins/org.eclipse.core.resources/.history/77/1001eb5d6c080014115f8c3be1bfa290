package lab1;

import java.io.IOException;
import java.io.File;
import java.util.ArrayList;
import java.awt.Color;
import java.awt.image.BufferedImage;

import edu.neumont.ui.Picture;

public class Steganog 
{
	private class Pixel
	{
		public int row;
		public int col; 
		public Color color;
		public String binaryRep;
		
		public Pixel(int row, int col, Color color, String binaryRep)
		{
			this.row = row;
			this.binaryRep = binaryRep;
			this.col = col;
			this.color = color;
		}
	}
	
	public Picture embedIntoImage(Picture cleanImage, String message) throws IOException 
	{ 
		//Picture crypticPic  =new Picture(message);
		BufferedImage temp = cleanImage.getBufferedImage();
		int width = cleanImage.width();
		int height = cleanImage.height();
		
		for(int row = 0; row < width; row++ )
		{
			for(int col = 0; col < height; col++)
			{
				//cleanImage.
			}
		}
		return null;
	}

	public String retreiveFromImage(Picture imageWithSecretMessage) throws IOException
	{
		int width = imageWithSecretMessage.width();
		int height = imageWithSecretMessage.height();
		PrimeIterator primeNumber = new PrimeIterator(width  * height);
		ArrayList<Pixel> pixels = new ArrayList<Pixel>();
		int pixelIndex = 0;
		int currentPrime  = primeNumber.next();
		for(int row = 0; row < width; row++ )
		{
			for(int col = 0; col < height; col++)
			{
				if(pixelIndex ==  currentPrime)
				{
					pixels.add(new Pixel(row,col, imageWithSecretMessage.get(col,row),""));
					currentPrime = primeNumber.next();
				}
				pixelIndex++;
			}
			
		}
		
		return null;
	}

}
